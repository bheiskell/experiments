"use strict";function BinaryUtils(){}function HammingEncoder(a){this.binaryUtils=a,this.reset()}BinaryUtils.prototype.isTwoPower=function(a){for(;0!==a;){if(1===a)return!0;if(1===(1&a))return!1;a>>=1}return!1},BinaryUtils.prototype.stringToBinary=function(a){for(var b=[],c=0;c<a.length;c++){var d=a[c].charCodeAt(0).toString(2),e=new Array(9-d.length).join("0")+d,f=e.split("").reverse().map(function(a){return+a});b=b.concat(f)}return b},angular.module("binaryutils",[]).service("binaryUtils",BinaryUtils),HammingEncoder.$inject=["binaryUtils"],HammingEncoder.prototype.reset=function(){this.index=1,this.encoded=[]},HammingEncoder.prototype.appendBits=function(a){for(var b=0;b<a.length;b++)this.appendBit(+a[b])},HammingEncoder.prototype.appendBit=function(a){if(0!==a&&1!==a)throw new Error("appendBit only accepts 0 or 1: "+a);for(;this.binaryUtils.isTwoPower(this.index);)this.encoded.push(0),this.index++;if(this.encoded.push(a),1===a)for(var b=1,c=this.index;0!==c;)0!==(b&c)&&(this._flip(b),c^=b),b<<=1;this.index++},HammingEncoder.prototype.getCode=function(){return this.encoded.slice()},HammingEncoder.prototype._flip=function(a){this.encoded[a-1]=1===this.encoded[a-1]?0:1},angular.module("hammingencoder",["binaryutils"]).service("hammingEncoder",HammingEncoder),angular.module("hammingCodeApp",["underscore","binaryutils","hammingencoder"]),angular.module("hammingCodeApp").controller("MainCtrl",["$scope","_","binaryUtils","hammingEncoder",function(a,b,c,d){function e(a){return c.stringToBinary(a)}function f(a){return d.reset(),d.appendBits(a),d.getCode()}function g(a){var d=1;return b.reduce(a,function(a,b){for(;c.isTwoPower(d);)a.push(void 0),d++;return a.push(b),d++,a},[])}function h(a){return b.range(1,a.length+1)}function i(a){return b.filter(h(a),function(a){return c.isTwoPower(a)})}function j(a){var c=k(a);return b.map(i(a),function(d){var e=b.map(a,function(a,b){var e=b+1,f=d&e,g=c[e]&&d===e;return{bit:f?a:void 0,flipped:g}});return{powerOfTwo:d,flipped:c[d],bits:e}})}function k(a){return b.reduce(a,function(a,b,d){var e=d+1,f=c.isTwoPower(e);if(void 0===a[e]&&f&&(a[e]=!1),0===b)return a;if(f)a[e]=!a[e];else for(var g=0,h=e;0!==h;){if(1===(1&h)){var i=1<<g;a[i]=!a[i]}g++,h>>=1}return a},{})}function l(a){return b.chain(a).filter(function(a){return a.flipped}).pluck("powerOfTwo").value()}function m(c){var d=b.pluck(c,"bit"),e=j(d),f=l(e);a.receivedBits=c,a.explodedCalc=e,a.incorrectIndexes=f,a.incorrectIndex=b.reduce(f,function(a,b){return a+b},0)}a.input="hi",a.onInputChange=function(c){var d=e(c),i=f(d),j=h(i),k=b.map(i,function(a){return{bit:a,flipped:!1}});a.hammingIndexes=j,a.inputBits=g(d),a.encodedBits=i,m(k)},a.onInputChange(a.input),a.flip=function(b){var c=a.receivedBits,d=c[b];d.bit=1===d.bit?0:1,d.flipped=!d.flipped,m(c)}}]);